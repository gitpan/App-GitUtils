NAME
    App::GitUtils - Day-to-day command-line utilities for git

VERSION
    This document describes version 0.02 of App::GitUtils (from Perl
    distribution App-GitUtils), released on 2014-07-18.

SYNOPSIS
    This distribution provides the following command-line utilities:

     gu

    These utilities provide some shortcuts and tab completion to make it
    more convenient when working with git con the command-line.

    More utilities will be added in the future.

FUNCTIONS
  info() -> [status, msg, result, meta]
    Return information about git repository.

    No arguments.

    Return value:

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

     (any)

  list_hooks() -> [status, msg, result, meta]
    List available hooks for the repository.

    No arguments.

    Return value:

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

     (any)

  post_commit() -> [status, msg, result, meta]
    Run post-commit hook.

    Basically the same as:

        % .git/hooks/post-commit

    except can be done anywhere inside git repo.

    No arguments.

    Return value:

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

     (any)

  run_hook(%args) -> [status, msg, result, meta]
    Run a hook.

    Basically the same as:

        % .git/hooks/<hook-name>

    except can be done anywhere inside git repo and provides tab completion.

    Arguments ('*' denotes required arguments):

    *   name* => *str*

        Hook name, e.g. post-commit.

    Return value:

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

     (any)

SEE ALSO
HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-GitUtils>.

SOURCE
    Source repository is at
    <https://github.com/sharyanto/perl-App-GitUtils>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-GitUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    Steven Haryanto <stevenharyanto@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2014 by Steven Haryanto.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

